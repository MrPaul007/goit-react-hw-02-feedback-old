{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","onLeaveFeedback","options","map","option","onClick","name","id","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","el","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAeeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,MCQQE,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBACzB,OADwD,EAAdC,QAC3BC,KAAI,SAAAC,GAAM,OACvB,wBAAQL,UAAU,MAAMM,QAASJ,EAAiCK,KAAMF,EAAOG,GAA/E,SACGH,EAAOP,OAD6CO,EAAOG,QCkBnDC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAId,UAAU,OAAd,UACE,qBAAIA,UAAU,OAAd,mBAA4BU,KAC5B,qBAAIV,UAAU,OAAd,sBAA+BW,KAC/B,qBAAIX,UAAU,OAAd,kBAA2BY,KAC3B,qBAAIZ,UAAU,OAAd,oBAA6Ba,KAC7B,qBAAIb,UAAU,OAAd,gCAAyCc,EAAzC,WCFSC,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGhB,UAAU,eAAb,SAA6BgB,KCI7Db,EAAU,CAAC,CAAEK,GAAI,OAAQV,MAAO,QAAU,CAAEU,GAAI,UAAWV,MAAO,WAAa,CAAEU,GAAI,MAAOV,MAAO,QAoD1FmB,E,4MAjDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPV,gBAAkB,SAAAiB,GAChB,IAAQZ,EAASY,EAAEC,OAAXb,KACR,EAAKc,UAAS,SAAAC,GAAS,sBACpBf,EAAOe,EAAUf,GAAQ,O,EAI9BgB,mBAAqB,WAInB,OAHcC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GACnD,OAAOD,EAAMC,IACZ,I,EAILd,mBAAqB,WACnB,OAAOe,KAAKC,MAAO,EAAKZ,MAAMR,KAAO,EAAKa,qBAAwB,M,4CAGpE,WACE,MAA+BQ,KAAKb,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBK,QAASA,EAASD,gBAAiB6B,KAAK7B,oBAE3D,cAAC,EAAD,CAASJ,MAAM,aAAf,SACGiC,KAAKR,qBACJ,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKR,qBACZT,mBAAoBiB,KAAKjB,uBAG3B,cAAC,EAAD,CAAcE,QAAQ,+B,GA1ChBgB,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.12fa1fe1.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return options.map(option => (\r\n    <button className=\"btn\" onClick={onLeaveFeedback} key={option.id} name={option.id}>\r\n      {option.title}\r\n    </button>\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      <li className=\"item\">Good: {good}</li>\r\n      <li className=\"item\">Neutral: {neutral}</li>\r\n      <li className=\"item\">Bad: {bad}</li>\r\n      <li className=\"item\">Total: {total}</li>\r\n      <li className=\"item\">Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p className=\"notification\">{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\nexport default Notification;\r\n","import { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nconst options = [{ id: \"good\", title: \"Good\" }, { id: \"neutral\", title: \"Neutral\" }, { id: \"bad\", title: \"Bad\" }];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  onLeaveFeedback = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce((acc, el) => {\n      return acc + el;\n    }, 0);\n    return total;\n  };\n\n  positivePercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.positivePercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}